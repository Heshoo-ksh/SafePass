@using MudBlazor
@inject SafePass.Services.AuthState AuthState
@inject NavigationManager NavigationManager
@using SafePass.Services
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">SafePass</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <!-- Regular Navigation Links -->
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="loginvault">
                <MudIcon Icon="@Icons.Material.Filled.VpnKey" class="me-2" /> Login Vault
            </NavLink>
        </div>
          <div class="nav-item px-3">
               <NavLink class="nav-link" href="CreditCardVault">
                    <MudIcon Icon="@Icons.Material.Filled.CreditCard" class="me-2" /> Credit Card Vault
               </NavLink>
          </div>
          <div class="nav-item px-3">
               <NavLink class="nav-link" href="IdentityVault">
                    <MudIcon Icon="@Icons.Material.Filled.CardMembership" class="me-2" /> Identity
               </NavLink>
          </div>
          <div class="nav-item px-3">
               <NavLink class="nav-link" href="NoteVault">
                    <MudIcon Icon="@Icons.Material.Filled.Notes" class="me-2" /> Notes
               </NavLink>
          </div>

        @if (AuthState.IsAuthenticated)
        {
            <!-- Logout Button -->
            <div class="logout-container">
                <MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="HandleLogout" Class="logout-button">
                    Logout
                </MudButton>
            </div>
        }
    </nav>
</div>

<style>
    .logout-container {
        position: absolute; /* Make the container position relative to its parent */
        bottom: 20px; /* Move the button 20px up from the bottom of the navbar */
        left: 50%; /* Horizontally center the button container */
        transform: translateX(-50%); /* Correct centering offset */
        width: 100%; /* Ensure the container spans the full width for responsiveness */
        text-align: center; /* Center-align the button within the container */
    }

    .logout-button {
        width: 90%; /* Adjust button width to avoid edge crowding */
        max-width: 300px; /* Set a maximum width for the button */
    }
</style>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void HandleLogout()
    {
        SessionManager.Instance.ClearSession(); // Clear session data
        AuthState.LogOut(); // Update authentication state
        NavigationManager.NavigateTo("/login"); // Redirect to login page
    }
}
