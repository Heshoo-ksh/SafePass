@using SafePass.Services
@inject IMediatorService MediatorService
@inject NavigationManager NavigationManager

<MudCard Class="pa-3 health-widget">
    <MudText Typo="Typo.h5" Align="Align.Center" Class="widget-title">
        Master Password Health
    </MudText>
    <MudText Typo="Typo.h6" Align="Align.Center" Color="@PasswordHealthColor" Class="password-health-status">
        @PasswordHealthMessage
    </MudText>
    <MudDivider Class="mb-3" />

    @if (PasswordHealthMessage == "Weak")
    {
        <MudAlert Severity="Severity.Error" Class="alert-message">
            Your password is weak! It's highly recommended to change it for better security.
        </MudAlert>
        <MudButton Color="Color.Error" Variant="Variant.Filled" Class="change-password-button" OnClick="NavigateToChangePassword">
            Change Password Now
        </MudButton>
    }
    else if (PasswordHealthMessage == "Medium")
    {
        <MudAlert Severity="Severity.Warning" Class="alert-message">
            Your password is okay but can be improved. Consider updating it for enhanced security.
        </MudAlert>
        <MudButton Color="Color.Warning" Variant="Variant.Filled" Class="change-password-button" OnClick="NavigateToChangePassword">
            Improve Password
        </MudButton>
    }
    else if (PasswordHealthMessage == "Strong")
    {
        <MudAlert Severity="Severity.Success" Class="alert-message">
            Your password is strong and secure. Keep up the great work!
        </MudAlert>
    }
</MudCard>

<style>
    /* General widget styling */
    .health-widget {
        width: 350px;
        border-radius: 15px;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
        background: #fff;
        padding: 20px;
        text-align: center;
    }

    .widget-title {
        font-weight: bold;
        color: #4e54c8;
        margin-bottom: 10px;
    }

    /* Password health status */
    .password-health-status {
        font-size: 1.4rem;
        font-weight: bold;
        margin-bottom: 15px;
    }

    /* Alert styling */
    .alert-message {
        margin-top: 10px;
        text-align: center;
        font-size: 0.9rem;
    }

    /* Change password button styling */
    .change-password-button {
        margin-top: 15px;
        width: 100%;
        font-size: 0.9rem;
        font-weight: bold;
    }
</style>

@code {
    private string PasswordHealthMessage = "Unknown";
    private Color PasswordHealthColor = Color.Default;

    protected override void OnInitialized()
    {
        Console.WriteLine("Registering for PasswordHealthChanged notifications.");
        MediatorService.Register("PasswordHealthChanged", OnPasswordHealthChanged);
    }

    private void OnPasswordHealthChanged(object data)
    {
        if (data is string health)
        {
            Console.WriteLine($"Received PasswordHealthChanged: {health}");
            PasswordHealthMessage = health;
            PasswordHealthColor = health switch
            {
                "Strong" => Color.Success,
                "Medium" => Color.Warning,
                "Weak" => Color.Error,
                _ => Color.Default
            };
            StateHasChanged();
        }
    }

    private void NavigateToChangePassword()
    {
        Console.WriteLine("Navigating to Change Password page.");
        NavigationManager.NavigateTo("/forgot-account");
    }
}
